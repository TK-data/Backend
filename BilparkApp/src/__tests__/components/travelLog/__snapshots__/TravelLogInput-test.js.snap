// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing TravelLogInput Renders as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TravelLogInput
    datepickerDate="15.5.2018"
    datepickerVisibility={[Function]}
    datepickerVisible={false}
    distance="0km"
    from="0"
    isLoading={undefined}
    postTravelLog={[Function]}
    resetComponent={[Function]}
    saveDatepickerDate={[Function]}
    saveDistance={[Function]}
    success={undefined}
    to="0"
    travelLog={
      Object {
        "addressFrom": "",
        "addressTo": "",
        "cargoValue": Object {
          "Cargo": false,
          "Comment": "",
        },
        "datepickerDate": "15.5.2018",
        "datepickerVisible": false,
        "distance": "0km",
        "formType": true,
        "formValue": Object {
          "Passenger": "0",
          "Passenger1": "",
          "Passenger2": "",
          "Passenger3": "",
          "Passenger4": "",
          "Passenger5": "",
        },
        "positionFrom": "0",
        "positionTo": "0",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Connect(GooglePlacesInputFrom) />,
        <Connect(GooglePlacesInputTo) />,
        <Styled(ViewNB)
          virtual={undefined}
        >
          <Styled(Text)
            style={
              Object {
                "color": "#fff",
                "fontSize": 18,
                "marginLeft": 10,
                "marginTop": 10,
              }
            }
            virtual={undefined}
          >
            Distanse: 
            0km
          </Styled(Text)>
          <Styled(ViewNB)
            style={
              Object {
                "alignSelf": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "width": 730,
              }
            }
            virtual={undefined}
          >
            <Styled(Text)
              style={
                Object {
                  "alignSelf": "center",
                  "color": "#fff",
                  "fontSize": 18,
                  "fontWeight": "normal",
                }
              }
              virtual={undefined}
            >
              Dato:
            </Styled(Text)>
            <CustomDatePickerIOS
              cancelTextIOS="Cancel"
              confirmTextIOS="Confirm"
              date={2018-05-15T13:52:13.216Z}
              isVisible={false}
              mode="date"
              neverDisableConfirmIOS={false}
              onCancel={[Function]}
              onConfirm={[Function]}
              onDateChange={[Function]}
              onHideAfterConfirm={[Function]}
              reactNativeModalPropsIOS={Object {}}
              titleIOS="Pick a date"
            />
            <Styled(Button)
              light={true}
              onPress={[Function]}
              style={
                Object {
                  "alignSelf": "flex-end",
                }
              }
              virtual={undefined}
            >
              <Styled(Text)
                style={
                  Object {
                    "color": "#000",
                    "fontSize": 20,
                    "fontWeight": "normal",
                    "textDecorationLine": "underline",
                  }
                }
                virtual={undefined}
              >
                15.5.2018
              </Styled(Text)>
            </Styled(Button)>
          </Styled(ViewNB)>
        </Styled(ViewNB)>,
        <Connect(TravelLogPassengerForm) />,
        <Connect(TravelLogCargoForm) />,
        <Styled(Button)
          bordered={true}
          light={true}
          onPress={[Function]}
          style={
            Object {
              "alignSelf": "center",
              "marginBottom": 10,
            }
          }
          virtual={undefined}
        >
          <Styled(Text)
            virtual={undefined}
          >
            Lagre kj√∏ring
          </Styled(Text)>
        </Styled(Button)>,
        null,
      ],
      "style": Object {
        "flex": 1,
        "justifyContent": "center",
      },
      "virtual": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Styled(Text)
              style={
                Object {
                  "color": "#fff",
                  "fontSize": 18,
                  "marginLeft": 10,
                  "marginTop": 10,
                }
              }
              virtual={undefined}
            >
              Distanse: 
              0km
            </Styled(Text)>,
            <Styled(ViewNB)
              style={
                Object {
                  "alignSelf": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "width": 730,
                }
              }
              virtual={undefined}
            >
              <Styled(Text)
                style={
                  Object {
                    "alignSelf": "center",
                    "color": "#fff",
                    "fontSize": 18,
                    "fontWeight": "normal",
                  }
                }
                virtual={undefined}
              >
                Dato:
              </Styled(Text)>
              <CustomDatePickerIOS
                cancelTextIOS="Cancel"
                confirmTextIOS="Confirm"
                date={2018-05-15T13:52:13.216Z}
                isVisible={false}
                mode="date"
                neverDisableConfirmIOS={false}
                onCancel={[Function]}
                onConfirm={[Function]}
                onDateChange={[Function]}
                onHideAfterConfirm={[Function]}
                reactNativeModalPropsIOS={Object {}}
                titleIOS="Pick a date"
              />
              <Styled(Button)
                light={true}
                onPress={[Function]}
                style={
                  Object {
                    "alignSelf": "flex-end",
                  }
                }
                virtual={undefined}
              >
                <Styled(Text)
                  style={
                    Object {
                      "color": "#000",
                      "fontSize": 20,
                      "fontWeight": "normal",
                      "textDecorationLine": "underline",
                    }
                  }
                  virtual={undefined}
                >
                  15.5.2018
                </Styled(Text)>
              </Styled(Button)>
            </Styled(ViewNB)>,
          ],
          "virtual": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                "Distanse: ",
                "0km",
              ],
              "style": Object {
                "color": "#fff",
                "fontSize": 18,
                "marginLeft": 10,
                "marginTop": 10,
              },
              "virtual": undefined,
            },
            "ref": null,
            "rendered": Array [
              "Distanse: ",
              "0km",
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Styled(Text)
                  style={
                    Object {
                      "alignSelf": "center",
                      "color": "#fff",
                      "fontSize": 18,
                      "fontWeight": "normal",
                    }
                  }
                  virtual={undefined}
                >
                  Dato:
                </Styled(Text)>,
                <CustomDatePickerIOS
                  cancelTextIOS="Cancel"
                  confirmTextIOS="Confirm"
                  date={2018-05-15T13:52:13.216Z}
                  isVisible={false}
                  mode="date"
                  neverDisableConfirmIOS={false}
                  onCancel={[Function]}
                  onConfirm={[Function]}
                  onDateChange={[Function]}
                  onHideAfterConfirm={[Function]}
                  reactNativeModalPropsIOS={Object {}}
                  titleIOS="Pick a date"
                />,
                <Styled(Button)
                  light={true}
                  onPress={[Function]}
                  style={
                    Object {
                      "alignSelf": "flex-end",
                    }
                  }
                  virtual={undefined}
                >
                  <Styled(Text)
                    style={
                      Object {
                        "color": "#000",
                        "fontSize": 20,
                        "fontWeight": "normal",
                        "textDecorationLine": "underline",
                      }
                    }
                    virtual={undefined}
                  >
                    15.5.2018
                  </Styled(Text)>
                </Styled(Button)>,
              ],
              "style": Object {
                "alignSelf": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "width": 730,
              },
              "virtual": undefined,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Dato:",
                  "style": Object {
                    "alignSelf": "center",
                    "color": "#fff",
                    "fontSize": 18,
                    "fontWeight": "normal",
                  },
                  "virtual": undefined,
                },
                "ref": null,
                "rendered": "Dato:",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "cancelTextIOS": "Cancel",
                  "confirmTextIOS": "Confirm",
                  "date": 2018-05-15T13:52:13.216Z,
                  "isVisible": false,
                  "mode": "date",
                  "neverDisableConfirmIOS": false,
                  "onCancel": [Function],
                  "onConfirm": [Function],
                  "onDateChange": [Function],
                  "onHideAfterConfirm": [Function],
                  "reactNativeModalPropsIOS": Object {},
                  "titleIOS": "Pick a date",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Styled(Text)
                    style={
                      Object {
                        "color": "#000",
                        "fontSize": 20,
                        "fontWeight": "normal",
                        "textDecorationLine": "underline",
                      }
                    }
                    virtual={undefined}
                  >
                    15.5.2018
                  </Styled(Text)>,
                  "light": true,
                  "onPress": [Function],
                  "style": Object {
                    "alignSelf": "flex-end",
                  },
                  "virtual": undefined,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "15.5.2018",
                    "style": Object {
                      "color": "#000",
                      "fontSize": 20,
                      "fontWeight": "normal",
                      "textDecorationLine": "underline",
                    },
                    "virtual": undefined,
                  },
                  "ref": null,
                  "rendered": "15.5.2018",
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bordered": true,
          "children": <Styled(Text)
            virtual={undefined}
          >
            Lagre kj√∏ring
          </Styled(Text)>,
          "light": true,
          "onPress": [Function],
          "style": Object {
            "alignSelf": "center",
            "marginBottom": 10,
          },
          "virtual": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Lagre kj√∏ring",
            "virtual": undefined,
          },
          "ref": null,
          "rendered": "Lagre kj√∏ring",
          "type": [Function],
        },
        "type": [Function],
      },
      null,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Connect(GooglePlacesInputFrom) />,
          <Connect(GooglePlacesInputTo) />,
          <Styled(ViewNB)
            virtual={undefined}
          >
            <Styled(Text)
              style={
                Object {
                  "color": "#fff",
                  "fontSize": 18,
                  "marginLeft": 10,
                  "marginTop": 10,
                }
              }
              virtual={undefined}
            >
              Distanse: 
              0km
            </Styled(Text)>
            <Styled(ViewNB)
              style={
                Object {
                  "alignSelf": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "width": 730,
                }
              }
              virtual={undefined}
            >
              <Styled(Text)
                style={
                  Object {
                    "alignSelf": "center",
                    "color": "#fff",
                    "fontSize": 18,
                    "fontWeight": "normal",
                  }
                }
                virtual={undefined}
              >
                Dato:
              </Styled(Text)>
              <CustomDatePickerIOS
                cancelTextIOS="Cancel"
                confirmTextIOS="Confirm"
                date={2018-05-15T13:52:13.216Z}
                isVisible={false}
                mode="date"
                neverDisableConfirmIOS={false}
                onCancel={[Function]}
                onConfirm={[Function]}
                onDateChange={[Function]}
                onHideAfterConfirm={[Function]}
                reactNativeModalPropsIOS={Object {}}
                titleIOS="Pick a date"
              />
              <Styled(Button)
                light={true}
                onPress={[Function]}
                style={
                  Object {
                    "alignSelf": "flex-end",
                  }
                }
                virtual={undefined}
              >
                <Styled(Text)
                  style={
                    Object {
                      "color": "#000",
                      "fontSize": 20,
                      "fontWeight": "normal",
                      "textDecorationLine": "underline",
                    }
                  }
                  virtual={undefined}
                >
                  15.5.2018
                </Styled(Text)>
              </Styled(Button)>
            </Styled(ViewNB)>
          </Styled(ViewNB)>,
          <Connect(TravelLogPassengerForm) />,
          <Connect(TravelLogCargoForm) />,
          <Styled(Button)
            bordered={true}
            light={true}
            onPress={[Function]}
            style={
              Object {
                "alignSelf": "center",
                "marginBottom": 10,
              }
            }
            virtual={undefined}
          >
            <Styled(Text)
              virtual={undefined}
            >
              Lagre kj√∏ring
            </Styled(Text)>
          </Styled(Button)>,
          null,
        ],
        "style": Object {
          "flex": 1,
          "justifyContent": "center",
        },
        "virtual": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Styled(Text)
                style={
                  Object {
                    "color": "#fff",
                    "fontSize": 18,
                    "marginLeft": 10,
                    "marginTop": 10,
                  }
                }
                virtual={undefined}
              >
                Distanse: 
                0km
              </Styled(Text)>,
              <Styled(ViewNB)
                style={
                  Object {
                    "alignSelf": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "width": 730,
                  }
                }
                virtual={undefined}
              >
                <Styled(Text)
                  style={
                    Object {
                      "alignSelf": "center",
                      "color": "#fff",
                      "fontSize": 18,
                      "fontWeight": "normal",
                    }
                  }
                  virtual={undefined}
                >
                  Dato:
                </Styled(Text)>
                <CustomDatePickerIOS
                  cancelTextIOS="Cancel"
                  confirmTextIOS="Confirm"
                  date={2018-05-15T13:52:13.216Z}
                  isVisible={false}
                  mode="date"
                  neverDisableConfirmIOS={false}
                  onCancel={[Function]}
                  onConfirm={[Function]}
                  onDateChange={[Function]}
                  onHideAfterConfirm={[Function]}
                  reactNativeModalPropsIOS={Object {}}
                  titleIOS="Pick a date"
                />
                <Styled(Button)
                  light={true}
                  onPress={[Function]}
                  style={
                    Object {
                      "alignSelf": "flex-end",
                    }
                  }
                  virtual={undefined}
                >
                  <Styled(Text)
                    style={
                      Object {
                        "color": "#000",
                        "fontSize": 20,
                        "fontWeight": "normal",
                        "textDecorationLine": "underline",
                      }
                    }
                    virtual={undefined}
                  >
                    15.5.2018
                  </Styled(Text)>
                </Styled(Button)>
              </Styled(ViewNB)>,
            ],
            "virtual": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  "Distanse: ",
                  "0km",
                ],
                "style": Object {
                  "color": "#fff",
                  "fontSize": 18,
                  "marginLeft": 10,
                  "marginTop": 10,
                },
                "virtual": undefined,
              },
              "ref": null,
              "rendered": Array [
                "Distanse: ",
                "0km",
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Styled(Text)
                    style={
                      Object {
                        "alignSelf": "center",
                        "color": "#fff",
                        "fontSize": 18,
                        "fontWeight": "normal",
                      }
                    }
                    virtual={undefined}
                  >
                    Dato:
                  </Styled(Text)>,
                  <CustomDatePickerIOS
                    cancelTextIOS="Cancel"
                    confirmTextIOS="Confirm"
                    date={2018-05-15T13:52:13.216Z}
                    isVisible={false}
                    mode="date"
                    neverDisableConfirmIOS={false}
                    onCancel={[Function]}
                    onConfirm={[Function]}
                    onDateChange={[Function]}
                    onHideAfterConfirm={[Function]}
                    reactNativeModalPropsIOS={Object {}}
                    titleIOS="Pick a date"
                  />,
                  <Styled(Button)
                    light={true}
                    onPress={[Function]}
                    style={
                      Object {
                        "alignSelf": "flex-end",
                      }
                    }
                    virtual={undefined}
                  >
                    <Styled(Text)
                      style={
                        Object {
                          "color": "#000",
                          "fontSize": 20,
                          "fontWeight": "normal",
                          "textDecorationLine": "underline",
                        }
                      }
                      virtual={undefined}
                    >
                      15.5.2018
                    </Styled(Text)>
                  </Styled(Button)>,
                ],
                "style": Object {
                  "alignSelf": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "width": 730,
                },
                "virtual": undefined,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Dato:",
                    "style": Object {
                      "alignSelf": "center",
                      "color": "#fff",
                      "fontSize": 18,
                      "fontWeight": "normal",
                    },
                    "virtual": undefined,
                  },
                  "ref": null,
                  "rendered": "Dato:",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "cancelTextIOS": "Cancel",
                    "confirmTextIOS": "Confirm",
                    "date": 2018-05-15T13:52:13.216Z,
                    "isVisible": false,
                    "mode": "date",
                    "neverDisableConfirmIOS": false,
                    "onCancel": [Function],
                    "onConfirm": [Function],
                    "onDateChange": [Function],
                    "onHideAfterConfirm": [Function],
                    "reactNativeModalPropsIOS": Object {},
                    "titleIOS": "Pick a date",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Styled(Text)
                      style={
                        Object {
                          "color": "#000",
                          "fontSize": 20,
                          "fontWeight": "normal",
                          "textDecorationLine": "underline",
                        }
                      }
                      virtual={undefined}
                    >
                      15.5.2018
                    </Styled(Text)>,
                    "light": true,
                    "onPress": [Function],
                    "style": Object {
                      "alignSelf": "flex-end",
                    },
                    "virtual": undefined,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "15.5.2018",
                      "style": Object {
                        "color": "#000",
                        "fontSize": 20,
                        "fontWeight": "normal",
                        "textDecorationLine": "underline",
                      },
                      "virtual": undefined,
                    },
                    "ref": null,
                    "rendered": "15.5.2018",
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bordered": true,
            "children": <Styled(Text)
              virtual={undefined}
            >
              Lagre kj√∏ring
            </Styled(Text)>,
            "light": true,
            "onPress": [Function],
            "style": Object {
              "alignSelf": "center",
              "marginBottom": 10,
            },
            "virtual": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Lagre kj√∏ring",
              "virtual": undefined,
            },
            "ref": null,
            "rendered": "Lagre kj√∏ring",
            "type": [Function],
          },
          "type": [Function],
        },
        null,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "context": Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
    },
  },
}
`;
