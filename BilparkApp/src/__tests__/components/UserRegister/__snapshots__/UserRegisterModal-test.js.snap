// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing UserRegisterModal Renders as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UserRegisterModal
    modalTransparent={undefined}
    modalVisible={undefined}
    navigateToLogin={[Function]}
    visibleModal={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "animationType": "slide",
      "children": <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#002776",
            "flex": 1,
            "justifyContent": "center",
            "padding": 10,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#fff",
            }
          }
        >
          Registrering godkjent
        </Text>
        <Button
          onPress={[Function]}
          title="Gå til innlogging"
        />
      </View>,
      "hardwareAccelerated": false,
      "onRequestClose": [Function],
      "transparent": undefined,
      "visible": true,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#fff",
              }
            }
          >
            Registrering godkjent
          </Text>,
          <Button
            onPress={[Function]}
            title="Gå til innlogging"
          />,
        ],
        "style": Object {
          "alignItems": "center",
          "backgroundColor": "#002776",
          "flex": 1,
          "justifyContent": "center",
          "padding": 10,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "accessible": true,
            "allowFontScaling": true,
            "children": "Registrering godkjent",
            "ellipsizeMode": "tail",
            "style": Object {
              "color": "#fff",
            },
          },
          "ref": null,
          "rendered": "Registrering godkjent",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "onPress": [Function],
            "title": "Gå til innlogging",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "animationType": "slide",
        "children": <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#002776",
              "flex": 1,
              "justifyContent": "center",
              "padding": 10,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#fff",
              }
            }
          >
            Registrering godkjent
          </Text>
          <Button
            onPress={[Function]}
            title="Gå til innlogging"
          />
        </View>,
        "hardwareAccelerated": false,
        "onRequestClose": [Function],
        "transparent": undefined,
        "visible": true,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#fff",
                }
              }
            >
              Registrering godkjent
            </Text>,
            <Button
              onPress={[Function]}
              title="Gå til innlogging"
            />,
          ],
          "style": Object {
            "alignItems": "center",
            "backgroundColor": "#002776",
            "flex": 1,
            "justifyContent": "center",
            "padding": 10,
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "accessible": true,
              "allowFontScaling": true,
              "children": "Registrering godkjent",
              "ellipsizeMode": "tail",
              "style": Object {
                "color": "#fff",
              },
            },
            "ref": null,
            "rendered": "Registrering godkjent",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "onPress": [Function],
              "title": "Gå til innlogging",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "context": Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
    },
  },
}
`;
